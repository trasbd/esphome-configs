esphome:
  name: tmrhrhesp002
  comment: Bathroom

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "q8ly1rMyxDQrES2YJqHeFsFRcyekmCK3lVdr0sHGRbQ="

ota:
  password: "6a8583c110bd17bb846f6707716d9e7a"

network:
    enable_ipv6: true

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.86.202
    gateway: 192.168.86.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "TMRHRHESP002 Fallback Hotspot"
    password: "HQ6ZShyY1OdO"

captive_portal:

web_server:
  port: 80
  include_internal: True

light:
  - platform: rgb
    name: "TMRHRHESP002 LED"
    red: output_componentR
    green: output_componentG
    blue: output_componentB
    effects:
      - pulse:
      - pulse:
          name: "Fast Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
      - pulse:
          name: "Slow Pulse"
          # transition_length: 1s      # defaults to 1s
          update_interval: 2s
      # Use default parameters:
      - random:
      # Customize parameters
      - random:
          name: "My Slow Random Effect"
          transition_length: 30s
          update_interval: 30s
      - random:
          name: "My Fast Random Effect"
          transition_length: 4s
          update_interval: 5s
      - strobe:
      - strobe:
          name: Strobe Effect With Custom Values
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 90%
              blue: 0%
              duration: 500ms
            - state: false
              duration: 250ms
            - state: true
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms
      - flicker:
      - flicker:
          name: Flicker Effect With Custom Values
          alpha: 95%
          intensity: 1.5%

# Example output entry
output:
  - platform: ledc
    id: output_componentR
    pin: 2
  - platform: ledc
    id: output_componentG
    pin: 15
  - platform: ledc
    id: output_componentB
    pin: 4

#  - platform: ble_client
#    ble_client_id: led_bar
#    service_uuid: "10110000-5354-4F52-5A26-4249434B454C"
#    characteristic_uuid: "10110013-5354-4f52-5a26-4249434b454c"
#    require_response: false
#    id: led_bar_output

esp32_ble_tracker:

# ble_client:
#   - mac_address: BE:FF:C2:32:EF:5E
#     id: led_bar
#     on_connect: 
#         - esp32_ble_tracker.stop_scan: 
#     on_disconnect: 
#         - esp32_ble_tracker.start_scan: 
            
  
# switch:
#   - platform: template
#     name: "LED Bar"
#     id: led_bar_switch
#     assumed_state: true
#     turn_on_action:
#       - lambda: |-
#             id(led_bar_switch).publish_state(true);
#       - ble_client.ble_write:
#           id: led_bar
#           service_uuid: "FFF0"
#           characteristic_uuid: "FFF3"
#           # List of bytes to write.
#           value: [0x7e, 00, 04, 01, 00, 00, 00, 00, 0xef]
#     turn_off_action:
#       - lambda: |-
#           id(led_bar_switch).publish_state(false);
#       - ble_client.ble_write:
#           id: led_bar
#           service_uuid: "FFF0"
#           characteristic_uuid: "FFF3"
#           # List of bytes to write.
#           value: [0x7e, 00, 04, 00, 00, 00, 00, 00, 0xef]

button:
  - platform: restart
    name: "TMRHRHESP002 Restart"
  - platform: shutdown
    name: "TMRHRHESP002 Shutdown"

    
  # - platform: template
  #   name: "Red Button"
  #   on_press:
  #     then:
  #       - switch.turn_on: led_bar_switch
  #       - ble_client.ble_write:
  #           id: led_bar
  #           service_uuid: "FFF0"
  #           characteristic_uuid: "FFF3"
  #           # List of bytes to write.
  #           value: [0x7e, 00, 05, 03, 0xff, 00, 00, 00, 0xef]

  # - platform: template
  #   name: "Blue Button"
  #   on_press:
  #     then:
  #     - switch.turn_on: led_bar_switch
  #     #- delay: 5s
  #     - ble_client.ble_write:
  #         id: led_bar
  #         service_uuid: "FFF0"
  #         characteristic_uuid: "FFF3"
  #         # List of bytes to write.
  #         #                         R       G     B
  #         value: [0x7e, 00, 05, 03, 0x00, 0x00, 255, 00, 0xef]

  # - platform: template
  #   name: "Green Button"
  #   on_press:
  #     then:
  #     - switch.turn_on: led_bar_switch
  #     #- delay: 5s
  #     - ble_client.ble_write:
  #         id: led_bar
  #         service_uuid: "FFF0"
  #         characteristic_uuid: "FFF3"
  #         # List of bytes to write.
  #         #                         R       G     B
  #         value: [0x7e, 00, 05, 03, 0x00, 255, 0, 00, 0xef]

sensor:
  - platform: uptime
    name: TMRHRHESP002 Uptime
  - platform: wifi_signal
    name: "TMRHRHESP002 WiFi Signal Sensor"
  - platform: dht
    model: DHT22
    pin: 13
    temperature:
      name: "TMRHRHESP002 Temperature"
      id: "tmrhrhesp002_temp"
    humidity:
      name: "TMRHRHESP002 Humidity"
    update_interval: 15s
  - platform: internal_temperature
    name: "tmrhrhesp002 Internal Temperature"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: TMRHRHESP002 IP Address
    ssid:
      name: TMRHRHESP002 Connected SSID
   # bssid:
   #   name: TMRHRHESP002 Connected BSSID
    mac_address:
      name: TMRHRHESP002 Mac Wifi Address
   # scan_results:
    #  name: TMRHRHESP002 Latest Scan Results